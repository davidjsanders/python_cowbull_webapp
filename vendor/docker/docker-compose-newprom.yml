version: '3'

networks:
  i_cowbull_network:
  i_management_network:

volumes:
  prometheus_volume:
  prometheus_config:
    external:
      name: prometheus_config

services:
  socat:
    image: alpine/socat
    command: tcp-listen:2375,fork,reuseaddr unix-connect:/var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - i_management_network
    deploy:
      placement:
        constraints:
          - node.role == manager

  cadvisor:
    image: google/cadvisor
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
    ports:
      - 18080:8080
    volumes:
     - /:/rootfs:ro
     - /var/run:/var/run:rw
     - /sys:/sys:ro
     - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - traefik
    networks:
      - i_management_network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - prometheus_config:/etc/prometheus
      # - type: volume
      #   source: prometheus_config
      #   target: /etc/prometheus
    ports:
      - 9090:9090
    deploy:
      placement:
        constraints: [node.role == manager]
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    depends_on:
      - cadvisor
    networks:
      - i_management_network

  traefik:
    image: traefik  # The official Traefik docker image
    command: --api --metrics --metrics.prometheus --metrics.prometheus.buckets="0.1,0.3,1.2,5.0" --docker --docker.endpoint=tcp://socat:2375 --docker.watch --docker.swarmMode 
    deploy:
      placement:
        constraints:
          - node.role == worker
    ports:
      - "80:80"      # The HTTP port
      - "8080:8080"  # The Web UI (enabled by --api)
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock  # So that Traefik can listen to the Docker events
#      - /dockerdata/config/traefik.toml:/etc/traefik/traefik.toml
#    labels:
#      - "traefik.docker.network=i_cowbull_network"
    networks:
      - i_cowbull_network
      - i_management_network
    depends_on:
      - i_cowbull_network
      - redis
      - cowbull_svc
      - cowbull_webapp

  redis:
    image: 'redis:latest'
    deploy:
      placement:
        constraints: [node.role == worker]
    networks:
      - i_cowbull_network
    labels:
      traefik.enable: "false"
      traefik.docker.network: i_cowbull_network
    restart: always

  cowbull_svc:
    image: 'dsanderscan/cowbull:1.0.172'
    depends_on:
      - redis
    deploy:
      replicas: 3
      restart_policy:
        condition: any
      placement:
        constraints: [node.role == worker]
      resources:
        limits:
          cpus: "0.1"
          memory: 100M
    environment:
      - LOGGING_LEVEL=10
      - 'PERSISTER={"engine_name": "redis", "parameters": {"host": "redis", "port": 6379, "db": 0}}'
    labels:
      traefik.enable: "false"
      traefik.docker.network: i_cowbull_network
    networks:
      - i_cowbull_network
    restart: always

  cowbull_webapp:
    depends_on:
      - cowbull_svc
    image: 'dsanderscan/cowbull_webapp:1.0.136'
    deploy:
      replicas: 3
      restart_policy:
        condition: any
      placement:
        constraints: [node.role == worker]
      resources:
        limits:
          cpus: "0.1"
          memory: 100M
      labels:
        traefik.enable: "true"
        traefik.docker.network: i_cowbull_network
        traefik.frontend.rule: "Host: cowbull"
        traefik.port: 8080
        traefik.backend: "backend-cowbull-webapp-docker"
        traefik.weight: 1
    environment:
      - COWBULL_SERVER=cowbull_svc
      - COWBULL_PORT=8080
      - COWBULL_VERSION=v1
      - BUILD_NUMBER=1.0.172-COMPOSE
      - COWBULL_ENVIRONMENT=--LOCAL--
    networks:
      - i_cowbull_network

  cowbull_webapp_g:
    image: 'dsanderscan/cowbull_webapp:1.0.136'
    depends_on:
      - cowbull_svc
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints: [node.role == worker]
      resources:
        limits:
          cpus: "0.1"
          memory: 100M
      labels:
        traefik.enable: "true"
        traefik.docker.network: i_cowbull_network
        traefik.frontend.rule: "Host: cowbull"
        traefik.port: 8080
        traefik.backend: "backend-cowbull-webapp-docker"
        traefik.weight: 1
    environment:
      - COWBULL_SERVER=cowbull_svc
      - COWBULL_PORT=8080
      - COWBULL_VERSION=v1
      - BUILD_NUMBER=1.0.172-GREEN
      - NAVBAR_COLOUR=bg-success
      - COWBULL_ENVIRONMENT=--LOCAL--
    networks:
      - i_cowbull_network
