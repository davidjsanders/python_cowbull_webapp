version: 2
jobs:
  build:
    docker:
      - image: circleci/python:2.7

    working_directory: ~/python_cowbull_webapp

    steps:
      - checkout

      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - setup_remote_docker

      - run:
          name: Docker login
          command: |
            docker login --username=$doclog --password=$docpass

      - run:
          name: Ensure AWK is available
          command: |
            sudo apt-get install gawk

      - run:
          name: Docker up
          environment:
            COWBULL_ENVIRONMENT: "CircleCI"
          command: |
            set -o pipefail
            export BUILD_NUMBER=$MAJOR_VERSION"."$MINOR_VERSION"."$CIRCLE_BUILD_NUM
            export doclog=${doclog}
            echo "Testing ${BUILD_NUMBER}"
            docker-compose -f vendor/docker/docker-compose-cicd.yml up -d | tee ~/compose.out
            redis=$(awk '{split($0,a," "); print $2}' <<< $(cat ~/compose.out | grep "docker_redis_1"))
            server=$(awk '{split($0,a," "); print $2}' <<< $(cat ~/compose.out | grep "docker_cowbull_svc_1"))
            webapp=$(awk '{split($0,a," "); print $2}' <<< $(cat ~/compose.out | grep "docker_cowbull_webapp_1"))
            echo "Redis is: "$redis
            echo "Cowbull is: "$server
            echo "WebApp is: "$webapp

      - run:
          name: Run unit tests
          command: |
            docker exec -t $webapp \
              bash -c "python -m unittest -v tests 2> >(tee -a /tmp/unittest-report.log >&2)"
            docker cp $webapp:/tmp/unittest-report.log /tmp/unittest-report.log
            echo "Test results status: $?"

      - run:
          name: Build final Docker image
          command: |
            docker build -f vendor/docker/Dockerfile -t dsanderscan/$IMAGE_NAME:$MAJOR_VERSION"."$MINOR_VERSION"."$CIRCLE_BUILD_NUM .

      - deploy:
          name: Push docker image
          command: |
            docker tag $doclog/$IMAGE_NAME:$MAJOR_VERSION"."$MINOR_VERSION"."$CIRCLE_BUILD_NUM dsanderscan/$IMAGE_NAME:latest
            docker push $doclog/$IMAGE_NAME:$MAJOR_VERSION"."$MINOR_VERSION"."$CIRCLE_BUILD_NUM
            docker push $doclog/$IMAGE_NAME:latest

      - save_cache:
          key: v2-dependencies-{{ checksum "requirements.txt" }}
          paths:
            - ~/.m2

      - store_artifacts:
          path: /tmp/unittest-report.log
          destination: unittest-report

      - store_test_results:
          path: /tmp/unittest-report.log